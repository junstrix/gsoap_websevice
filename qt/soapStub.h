/* soapStub.h
   Generated by gSOAP 2.8.15 from gsoapControl.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20815
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns__ledControlResponse
#define SOAP_TYPE_ns__ledControlResponse (9)
/* ns:ledControlResponse */
struct ns__ledControlResponse
{
public:
	int *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
public:
	int soap_type() const { return 9; } /* = unique id SOAP_TYPE_ns__ledControlResponse */
};
#endif

#ifndef SOAP_TYPE_ns__ledControl
#define SOAP_TYPE_ns__ledControl (10)
/* ns:ledControl */
struct ns__ledControl
{
public:
	int led_id;	/* required element of type xsd:int */
	int led_stat;	/* required element of type xsd:int */
public:
	int soap_type() const { return 10; } /* = unique id SOAP_TYPE_ns__ledControl */
};
#endif

#ifndef SOAP_TYPE_ns__motorControlResponse
#define SOAP_TYPE_ns__motorControlResponse (12)
/* ns:motorControlResponse */
struct ns__motorControlResponse
{
public:
	int *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
public:
	int soap_type() const { return 12; } /* = unique id SOAP_TYPE_ns__motorControlResponse */
};
#endif

#ifndef SOAP_TYPE_ns__motorControl
#define SOAP_TYPE_ns__motorControl (13)
/* ns:motorControl */
struct ns__motorControl
{
public:
	int motor_id;	/* required element of type xsd:int */
	int motor_op;	/* required element of type xsd:int */
public:
	int soap_type() const { return 13; } /* = unique id SOAP_TYPE_ns__motorControl */
};
#endif

#ifndef SOAP_TYPE_ns__spiReadIdResponse
#define SOAP_TYPE_ns__spiReadIdResponse (15)
/* ns:spiReadIdResponse */
struct ns__spiReadIdResponse
{
public:
	int *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
public:
	int soap_type() const { return 15; } /* = unique id SOAP_TYPE_ns__spiReadIdResponse */
};
#endif

#ifndef SOAP_TYPE_ns__spiReadId
#define SOAP_TYPE_ns__spiReadId (16)
/* ns:spiReadId */
struct ns__spiReadId
{
public:
	int soap_type() const { return 16; } /* = unique id SOAP_TYPE_ns__spiReadId */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__lm75ReadTempResponse
#define SOAP_TYPE_ns__lm75ReadTempResponse (18)
/* ns:lm75ReadTempResponse */
struct ns__lm75ReadTempResponse
{
public:
	int *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
public:
	int soap_type() const { return 18; } /* = unique id SOAP_TYPE_ns__lm75ReadTempResponse */
};
#endif

#ifndef SOAP_TYPE_ns__lm75ReadTemp
#define SOAP_TYPE_ns__lm75ReadTemp (19)
/* ns:lm75ReadTemp */
struct ns__lm75ReadTemp
{
public:
	int soap_type() const { return 19; } /* = unique id SOAP_TYPE_ns__lm75ReadTemp */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns__adcReadValueResponse
#define SOAP_TYPE_ns__adcReadValueResponse (21)
/* ns:adcReadValueResponse */
struct ns__adcReadValueResponse
{
public:
	int *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
public:
	int soap_type() const { return 21; } /* = unique id SOAP_TYPE_ns__adcReadValueResponse */
};
#endif

#ifndef SOAP_TYPE_ns__adcReadValue
#define SOAP_TYPE_ns__adcReadValue (22)
/* ns:adcReadValue */
struct ns__adcReadValue
{
public:
	int soap_type() const { return 22; } /* = unique id SOAP_TYPE_ns__adcReadValue */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (23)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 23; } /* = unique id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (24)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 24; } /* = unique id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (26)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 26; } /* = unique id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (29)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 29; } /* = unique id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (30)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 30; } /* = unique id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
